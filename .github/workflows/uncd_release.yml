name: Uncd binary and Docker image release

on:
  # Run when a new release or rc is created
  release:
    types: [released, prereleased]
  push:
    branches: main

  workflow_dispatch:
    inputs:
      branch:
        default: 'main'
        description: "Utility branch to build and publish"
        type: string
        required: true

jobs:
  binary-release:
    name: "Build and publish uncd binary"
    runs-on: "ubuntu-latest"
    #environment: deploy
    permissions:
      id-token: write # required to use OIDC authentication

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::875198055600:role/GitHubActionsRunner
          aws-region: us-west-1

      - name: Checkout ${{ github.event.inputs.branch }} branch
        if: ${{ github.event_name == 'workflow_dispatch'}}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Checkout unc repository
        if: ${{ github.event_name != 'workflow_dispatch'}}
        uses: actions/checkout@v4

      - name: Uncd binary build and upload to S3
        run: ./scripts/binary_release.sh

      - name: Update latest version metadata in S3
        run: |
          echo $(git rev-parse HEAD) > latest
          BRANCH=$(git branch --show-current)
          aws s3 cp --acl public-read latest s3://build.utility.com/unc/$(uname)/${BRANCH}/latest

  docker-release:
    name: "Build and publish unc Docker image"
    runs-on: "ubuntu-latest"
    #environment: deploy
    steps:
      - name: Checkout ${{ github.event.inputs.branch }} branch
        if: ${{ github.event_name == 'workflow_dispatch'}}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Checkout unc repository
        if: ${{ github.event_name != 'workflow_dispatch'}}
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PAT_TOKEN }}
  
      - name: Build and push Docker image to Dockerhub
        run: |
          COMMIT=$(git rev-parse HEAD)
          BRANCH=${{ github.ref_name }}
          make docker-unc
          docker tag unc utnet-org/utility:${BRANCH}-${COMMIT}
          docker tag unc utnet-org/utility:${BRANCH}

          docker push utnet-org/utility:${BRANCH}-${COMMIT}
          docker push utnet-org/utility:${BRANCH}
          
          if [[ ${BRANCH} == "main" ]];
          then
            docker tag unc utnet-org/utility:latest
            docker push utnet-org/utility:latest
          fi